#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <errno.h>

enum
{
    BUFFER_SIZE = 16
};

void
die(int condition) {
    if (condition) {
        exit(EXIT_FAILURE);
    }
}

struct Reader {
    char buf[BUFFER_SIZE];
    ssize_t pos, len;
};

int
fast_c(struct Reader *r) {
    if (r->pos >= r->len) {
        r->len = read(STDIN_FILENO, r->buf, BUFFER_SIZE);
        die(r->len < 0);
        r->pos = 0;
    }
    if (r->pos == r->len) {
        return EOF;
    }
    (r->pos)++;
    return r->buf[r->pos - 1];
}

long long unsigned int
fast_llu(struct Reader *r) {
    int c;
    while ((c = fast_c(r)) != EOF && isspace((unsigned char)c)) {
        ;
    }
    errno = 0;
    if (c == EOF) {
        errno = 1;
        return 0;
    }

    int sign = 0;
    long long unsigned int res = 0;
    if (c == '-') {
        sign = 1;
        c = fast_c(r);
    } else if (c == '+') {
        c = fast_c(r);
    }

    do {
        res *= 10;
        if (sign) {
            res -= c - '0';
        } else {
            res += c - '0';
        }
    } while ((c = fast_c(r)) != EOF && !isspace(c));

    return res;
}

int
main(void) {
    struct Reader r = {0};
    long long unsigned int s = 0;

    long long unsigned int num = fast_llu(&r);
    while (errno == 0) {
        s += num;
        num = fast_llu(&r);
    }
    printf("%lld\n", (long long int)s);

    return 0;
}
